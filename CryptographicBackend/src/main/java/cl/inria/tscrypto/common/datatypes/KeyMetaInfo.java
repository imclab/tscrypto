package cl.inria.tscrypto.common.datatypes;

import java.util.UUID;


/**
 * A GroupKey with information common to all the keyshares.
 * Generated by the Dealer class
 * 
 * Reference: "Practical Threshold Signatures",<br>
 * Victor Shoup (sho@zurich.ibm.com), IBM Research Paper RZ3121, 4/30/99<BR>
 * 
 * @author Steve Weis <sweis@mit.edu>
 */
public class KeyMetaInfo extends JsonFormat {
	/** (k,l) Parameters. k out of l shares needed for a signature */
	private int k, l;

	private int keysize;

	/** UUID of this key */
	private String alias;

	/** default digest algorithm */
	private String algorithm = "RSA";
	
	/**
	 * Empty no-args constructor needed by Gson
	 */
	public KeyMetaInfo() {
	}
	
	public KeyMetaInfo(final int k, final int l, final int keysize) {
		this.k = k;
		this.l = l;
		this.keysize = keysize;
		this.alias = UUID.randomUUID().toString();
	}

	/**
	 * Returns the minimum threshold size
	 * 
	 * @return The minimum threshold size for this group 'k'.
	 */
	public int getK() {
		return this.k;
	}

	/**
	 * Returns the group size
	 * 
	 * @return The size of this key's associated group.
	 */
	public int getL() {
		return this.l;
	}


	public int getKeysize() {
		return keysize;
	}

	public String getAlias() {
		return alias;
	}

	public String getAlgorithm() {
		return algorithm;
	}

}